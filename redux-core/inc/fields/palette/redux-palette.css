.redux-container-palette label { border: 3px solid transparent; border-color: transparent !important; border-radius: 0; width: 100% !important; display: block; }

.redux-container-palette label.ui-button.ui-widget { width: 95%; background: none; padding: 0; }

.redux-container-palette label.ui-button.ui-widget .ui-button-text { display: -webkit-box; display: -webkit-flex; display: -ms-flexbox; display: flex; }

.redux-container-palette label.ui-button.ui-widget .ui-button-text span { padding: 10px; -webkit-box-flex: 1; -webkit-flex-grow: 1; -ms-flex-positive: 1; flex-grow: 1; font-size: 0; line-height: 10px; color: rgba(0, 0, 0, 0); -webkit-transition: all 200ms ease-in-out; transition: all 200ms ease-in-out; text-shadow: 0; }

.redux-container-palette label.ui-button.ui-widget .ui-button-text span:hover { -webkit-box-flex: 3; -webkit-flex-grow: 3; -ms-flex-positive: 3; flex-grow: 3; font-weight: bold; min-width: 60px; font-size: 12px; line-height: 10px; color: #333; text-shadow: 0 0 8px #fff, 0 0 8px #fff; }

.redux-container-palette label.ui-state-active { border: 3px solid #333 !important; }

.wp-customizer .redux-main .redux-container-palette label { margin-bottom: 3px; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVkdXgtcGFsZXR0ZS5jc3MiLCJzb3VyY2VzIjpbInJlZHV4LXBhbGV0dGUuc2NzcyJdLCJzb3VyY2VzQ29udGVudCI6WyIucmVkdXgtY29udGFpbmVyLXBhbGV0dGUge1xuICAgIGxhYmVsIHtcbiAgICAgICAgYm9yZGVyOiAzcHggc29saWQgdHJhbnNwYXJlbnQ7XG4gICAgICAgIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQgIWltcG9ydGFudDtcbiAgICAgICAgYm9yZGVyLXJhZGl1czogMDtcbiAgICAgICAgd2lkdGg6IDEwMCUgIWltcG9ydGFudDtcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgICYudWktYnV0dG9uLnVpLXdpZGdldCB7XG4gICAgICAgICAgICB3aWR0aDogOTUlO1xuICAgICAgICAgICAgYmFja2dyb3VuZDogbm9uZTtcbiAgICAgICAgICAgIHBhZGRpbmc6IDA7XG5cbiAgICAgICAgICAgIC51aS1idXR0b24tdGV4dCB7XG4gICAgICAgICAgICAgICAgZGlzcGxheTogZmxleDtcblxuICAgICAgICAgICAgICAgIHNwYW4ge1xuICAgICAgICAgICAgICAgICAgICBwYWRkaW5nOiAxMHB4O1xuICAgICAgICAgICAgICAgICAgICBmbGV4LWdyb3c6IDE7XG4gICAgICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMDtcbiAgICAgICAgICAgICAgICAgICAgbGluZS1oZWlnaHQ6IDEwcHg7XG4gICAgICAgICAgICAgICAgICAgIGNvbG9yOiByZ2JhKDAsIDAsIDAsIDApO1xuICAgICAgICAgICAgICAgICAgICAtd2Via2l0LXRyYW5zaXRpb246IGFsbCAyMDBtcyBlYXNlLWluLW91dDtcbiAgICAgICAgICAgICAgICAgICAgLW1vei10cmFuc2l0aW9uOiBhbGwgMjAwbXMgZWFzZS1pbi1vdXQ7XG4gICAgICAgICAgICAgICAgICAgIC1tcy10cmFuc2l0aW9uOiBhbGwgMjAwbXMgZWFzZS1pbi1vdXQ7XG4gICAgICAgICAgICAgICAgICAgIC1vLXRyYW5zaXRpb246IGFsbCAyMDBtcyBlYXNlLWluLW91dDtcbiAgICAgICAgICAgICAgICAgICAgdHJhbnNpdGlvbjogYWxsIDIwMG1zIGVhc2UtaW4tb3V0O1xuICAgICAgICAgICAgICAgICAgICB0ZXh0LXNoYWRvdzogMDtcbiAgICAgICAgICAgICAgICAgICAgJjpob3ZlciB7XG4gICAgICAgICAgICAgICAgICAgICAgICBmbGV4LWdyb3c6IDM7XG4gICAgICAgICAgICAgICAgICAgICAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICAgICAgICAgICAgICAgICAgICAgIG1pbi13aWR0aDogNjBweDtcbiAgICAgICAgICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMTJweDtcbiAgICAgICAgICAgICAgICAgICAgICAgIGxpbmUtaGVpZ2h0OiAxMHB4O1xuICAgICAgICAgICAgICAgICAgICAgICAgY29sb3I6ICMzMzM7XG4gICAgICAgICAgICAgICAgICAgICAgICB0ZXh0LXNoYWRvdzogMCAwIDhweCAjZmZmLCAwIDAgOHB4ICNmZmY7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICAmLnVpLXN0YXRlLWFjdGl2ZSB7XG4gICAgICAgICAgICBib3JkZXI6IDNweCBzb2xpZCAjMzMzICFpbXBvcnRhbnQ7XG4gICAgICAgIH1cbiAgICB9XG59XG5cbi53cC1jdXN0b21pemVyIHtcbiAgICAucmVkdXgtbWFpbiAucmVkdXgtY29udGFpbmVyLXBhbGV0dGUgbGFiZWwge1xuICAgICAgICBtYXJnaW4tYm90dG9tOiAzcHg7XG4gICAgfVxufVxuXG4iXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsQUFDSSx3QkFEb0IsQ0FDcEIsS0FBSyxDQUFDLEVBQ0YsTUFBTSxFQUFFLHFCQUFxQixFQUM3QixZQUFZLEVBQUUsc0JBQXNCLEVBQ3BDLGFBQWEsRUFBRSxDQUFDLEVBQ2hCLEtBQUssRUFBRSxlQUFlLEVBQ3RCLE9BQU8sRUFBRSxLQUFLLEdBcUNqQjs7QUEzQ0wsQUFPUSx3QkFQZ0IsQ0FDcEIsS0FBSyxBQU1BLFVBQVUsQUFBQSxVQUFVLENBQUMsRUFDbEIsS0FBSyxFQUFFLEdBQUcsRUFDVixVQUFVLEVBQUUsSUFBSSxFQUNoQixPQUFPLEVBQUUsQ0FBQyxHQTRCYjs7QUF0Q1QsQUFZWSx3QkFaWSxDQUNwQixLQUFLLEFBTUEsVUFBVSxBQUFBLFVBQVUsQ0FLakIsZUFBZSxDQUFDLEVBQ1osT0FBTyxFQUFFLElBQUksR0F3QmhCOztBQXJDYixBQWVnQix3QkFmUSxDQUNwQixLQUFLLEFBTUEsVUFBVSxBQUFBLFVBQVUsQ0FLakIsZUFBZSxDQUdYLElBQUksQ0FBQyxFQUNELE9BQU8sRUFBRSxJQUFJLEVBQ2IsU0FBUyxFQUFFLENBQUMsRUFDWixTQUFTLEVBQUUsQ0FBQyxFQUNaLFdBQVcsRUFBRSxJQUFJLEVBQ2pCLEtBQUssRUFBRSxnQkFBZ0IsRUFDdkIsa0JBQWtCLEVBQUUscUJBQXFCLEVBQ3pDLGVBQWUsRUFBRSxxQkFBcUIsRUFDdEMsY0FBYyxFQUFFLHFCQUFxQixFQUNyQyxhQUFhLEVBQUUscUJBQXFCLEVBQ3BDLFVBQVUsRUFBRSxxQkFBcUIsRUFDakMsV0FBVyxFQUFFLENBQUMsR0FVakI7O0FBcENqQixBQTJCb0Isd0JBM0JJLENBQ3BCLEtBQUssQUFNQSxVQUFVLEFBQUEsVUFBVSxDQUtqQixlQUFlLENBR1gsSUFBSSxBQVlDLE1BQU0sQ0FBQyxFQUNKLFNBQVMsRUFBRSxDQUFDLEVBQ1osV0FBVyxFQUFFLElBQUksRUFDakIsU0FBUyxFQUFFLElBQUksRUFDZixTQUFTLEVBQUUsSUFBSSxFQUNmLFdBQVcsRUFBRSxJQUFJLEVBQ2pCLEtBQUssRUFBRSxJQUFJLEVBQ1gsV0FBVyxFQUFFLDBCQUEwQixHQUMxQzs7QUFuQ3JCLEFBd0NRLHdCQXhDZ0IsQ0FDcEIsS0FBSyxBQXVDQSxnQkFBZ0IsQ0FBQyxFQUNkLE1BQU0sRUFBRSx5QkFBeUIsR0FDcEM7O0FBSVQsQUFDSSxjQURVLENBQ1YsV0FBVyxDQUFDLHdCQUF3QixDQUFDLEtBQUssQ0FBQyxFQUN2QyxhQUFhLEVBQUUsR0FBRyxHQUNyQiJ9 */

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlZHV4LXBhbGV0dGUuc2NzcyIsInJlZHV4LXBhbGV0dGUuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLGlDQUFBLDZCQUNTLEVDRUQsb0NBQW9DLEVESDVDLGdCQUF3QixFQ0toQixzQkFBc0IsRURMOUIsY0FBQSxFQUFBOztBQUFBLHFEQUFBLFVBQUEsRUNTWSxnQkFBZ0IsRURUNUIsVUFBQSxFQUFBOztBQUFBLHFFQ2FnQixvQkFBYSxFQUFiLHFCQUFhLEVBQWIsb0JBQWEsRUFBYixhQUFhLEVBQUE7O0FEYjdCLDBFQ2dCb0IsYUFBYSxFQUNiLG1CQUFZLEVBQVosb0JBQVksRUFBWixvQkFBWSxFQUFaLFlBQVksRUFDWixZQUFZLEVBQ1osaUJBQWlCLEVBQ2pCLHVCQUF1QixFQUN2Qix5Q0FBeUMsRUFJekMsaUNBQWlDLEVBQ2pDLGNBQWMsRUFBQTs7QUQxQmxDLGdGQzRCd0IsbUJBQVksRUFBWixvQkFBWSxFQUFaLG9CQUFZLEVBQVosWUFBWSxFQUNaLGlCQUFpQixFQUNqQixlQUFlLEVBQ2YsZUFBZSxFQUNmLGlCQUFpQixFQUNqQixXQUFXLEVBQ1gsdUNBQXVDLEVBQUE7O0FEbEMvRCxpREN5Q1ksaUNBQWlDLEVBQUE7O0FBSzdDLDREQUVRLGtCQUFrQixFQUFBOztBQWxDMUIscXJIQUFxckgiLCJmaWxlIjoicmVkdXgtcGFsZXR0ZS5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIucmVkdXgtY29udGFpbmVyLXBhbGV0dGUge1xuICAgIGxhYmVsIHtcbiAgICAgICAgYm9yZGVyOiAzcHggc29saWQgdHJhbnNwYXJlbnQ7XG4gICAgICAgIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQgIWltcG9ydGFudDtcbiAgICAgICAgYm9yZGVyLXJhZGl1czogMDtcbiAgICAgICAgd2lkdGg6IDEwMCUgIWltcG9ydGFudDtcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgICYudWktYnV0dG9uLnVpLXdpZGdldCB7XG4gICAgICAgICAgICB3aWR0aDogOTUlO1xuICAgICAgICAgICAgYmFja2dyb3VuZDogbm9uZTtcbiAgICAgICAgICAgIHBhZGRpbmc6IDA7XG5cbiAgICAgICAgICAgIC51aS1idXR0b24tdGV4dCB7XG4gICAgICAgICAgICAgICAgZGlzcGxheTogZmxleDtcblxuICAgICAgICAgICAgICAgIHNwYW4ge1xuICAgICAgICAgICAgICAgICAgICBwYWRkaW5nOiAxMHB4O1xuICAgICAgICAgICAgICAgICAgICBmbGV4LWdyb3c6IDE7XG4gICAgICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMDtcbiAgICAgICAgICAgICAgICAgICAgbGluZS1oZWlnaHQ6IDEwcHg7XG4gICAgICAgICAgICAgICAgICAgIGNvbG9yOiByZ2JhKDAsIDAsIDAsIDApO1xuICAgICAgICAgICAgICAgICAgICAtd2Via2l0LXRyYW5zaXRpb246IGFsbCAyMDBtcyBlYXNlLWluLW91dDtcbiAgICAgICAgICAgICAgICAgICAgLW1vei10cmFuc2l0aW9uOiBhbGwgMjAwbXMgZWFzZS1pbi1vdXQ7XG4gICAgICAgICAgICAgICAgICAgIC1tcy10cmFuc2l0aW9uOiBhbGwgMjAwbXMgZWFzZS1pbi1vdXQ7XG4gICAgICAgICAgICAgICAgICAgIC1vLXRyYW5zaXRpb246IGFsbCAyMDBtcyBlYXNlLWluLW91dDtcbiAgICAgICAgICAgICAgICAgICAgdHJhbnNpdGlvbjogYWxsIDIwMG1zIGVhc2UtaW4tb3V0O1xuICAgICAgICAgICAgICAgICAgICB0ZXh0LXNoYWRvdzogMDtcbiAgICAgICAgICAgICAgICAgICAgJjpob3ZlciB7XG4gICAgICAgICAgICAgICAgICAgICAgICBmbGV4LWdyb3c6IDM7XG4gICAgICAgICAgICAgICAgICAgICAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICAgICAgICAgICAgICAgICAgICAgIG1pbi13aWR0aDogNjBweDtcbiAgICAgICAgICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMTJweDtcbiAgICAgICAgICAgICAgICAgICAgICAgIGxpbmUtaGVpZ2h0OiAxMHB4O1xuICAgICAgICAgICAgICAgICAgICAgICAgY29sb3I6ICMzMzM7XG4gICAgICAgICAgICAgICAgICAgICAgICB0ZXh0LXNoYWRvdzogMCAwIDhweCAjZmZmLCAwIDAgOHB4ICNmZmY7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICAmLnVpLXN0YXRlLWFjdGl2ZSB7XG4gICAgICAgICAgICBib3JkZXI6IDNweCBzb2xpZCAjMzMzICFpbXBvcnRhbnQ7XG4gICAgICAgIH1cbiAgICB9XG59XG5cbi53cC1jdXN0b21pemVyIHtcbiAgICAucmVkdXgtbWFpbiAucmVkdXgtY29udGFpbmVyLXBhbGV0dGUgbGFiZWwge1xuICAgICAgICBtYXJnaW4tYm90dG9tOiAzcHg7XG4gICAgfVxufVxuXG4iLCIucmVkdXgtY29udGFpbmVyLXBhbGV0dGUge1xuICAgIGxhYmVsIHtcbiAgICAgICAgYm9yZGVyOiAzcHggc29saWQgdHJhbnNwYXJlbnQ7XG4gICAgICAgIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQgIWltcG9ydGFudDtcbiAgICAgICAgYm9yZGVyLXJhZGl1czogMDtcbiAgICAgICAgd2lkdGg6IDEwMCUgIWltcG9ydGFudDtcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgICYudWktYnV0dG9uLnVpLXdpZGdldCB7XG4gICAgICAgICAgICB3aWR0aDogOTUlO1xuICAgICAgICAgICAgYmFja2dyb3VuZDogbm9uZTtcbiAgICAgICAgICAgIHBhZGRpbmc6IDA7XG5cbiAgICAgICAgICAgIC51aS1idXR0b24tdGV4dCB7XG4gICAgICAgICAgICAgICAgZGlzcGxheTogZmxleDtcblxuICAgICAgICAgICAgICAgIHNwYW4ge1xuICAgICAgICAgICAgICAgICAgICBwYWRkaW5nOiAxMHB4O1xuICAgICAgICAgICAgICAgICAgICBmbGV4LWdyb3c6IDE7XG4gICAgICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMDtcbiAgICAgICAgICAgICAgICAgICAgbGluZS1oZWlnaHQ6IDEwcHg7XG4gICAgICAgICAgICAgICAgICAgIGNvbG9yOiByZ2JhKDAsIDAsIDAsIDApO1xuICAgICAgICAgICAgICAgICAgICAtd2Via2l0LXRyYW5zaXRpb246IGFsbCAyMDBtcyBlYXNlLWluLW91dDtcbiAgICAgICAgICAgICAgICAgICAgLW1vei10cmFuc2l0aW9uOiBhbGwgMjAwbXMgZWFzZS1pbi1vdXQ7XG4gICAgICAgICAgICAgICAgICAgIC1tcy10cmFuc2l0aW9uOiBhbGwgMjAwbXMgZWFzZS1pbi1vdXQ7XG4gICAgICAgICAgICAgICAgICAgIC1vLXRyYW5zaXRpb246IGFsbCAyMDBtcyBlYXNlLWluLW91dDtcbiAgICAgICAgICAgICAgICAgICAgdHJhbnNpdGlvbjogYWxsIDIwMG1zIGVhc2UtaW4tb3V0O1xuICAgICAgICAgICAgICAgICAgICB0ZXh0LXNoYWRvdzogMDtcbiAgICAgICAgICAgICAgICAgICAgJjpob3ZlciB7XG4gICAgICAgICAgICAgICAgICAgICAgICBmbGV4LWdyb3c6IDM7XG4gICAgICAgICAgICAgICAgICAgICAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICAgICAgICAgICAgICAgICAgICAgIG1pbi13aWR0aDogNjBweDtcbiAgICAgICAgICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMTJweDtcbiAgICAgICAgICAgICAgICAgICAgICAgIGxpbmUtaGVpZ2h0OiAxMHB4O1xuICAgICAgICAgICAgICAgICAgICAgICAgY29sb3I6ICMzMzM7XG4gICAgICAgICAgICAgICAgICAgICAgICB0ZXh0LXNoYWRvdzogMCAwIDhweCAjZmZmLCAwIDAgOHB4ICNmZmY7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICAmLnVpLXN0YXRlLWFjdGl2ZSB7XG4gICAgICAgICAgICBib3JkZXI6IDNweCBzb2xpZCAjMzMzICFpbXBvcnRhbnQ7XG4gICAgICAgIH1cbiAgICB9XG59XG5cbi53cC1jdXN0b21pemVyIHtcbiAgICAucmVkdXgtbWFpbiAucmVkdXgtY29udGFpbmVyLXBhbGV0dGUgbGFiZWwge1xuICAgICAgICBtYXJnaW4tYm90dG9tOiAzcHg7XG4gICAgfVxufVxuXG4iXX0= */
